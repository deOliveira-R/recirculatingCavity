/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// General

application         GeN-Foam;

startFrom           startTime;//startTime;//latestTime;

startTime           0;

stopAt              endTime;//writeNow;//  

endTime             250;

deltaT              0.01; // time step (if non adjusted)

adjustTimeStep      false; // adjust time step based on CFL condition, max power and max delta T

maxDeltaT           1.0; // max time step

writeControl        runTime;//timeStep;//runTime;//adjustableRunTime;

writeInterval       10;

purgeWrite          2;

writeFormat         ascii;

writePrecision      7;

writeCompression    true;

timeFormat          general;

timePrecision       8;

runTimeModifiable   true;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Physics to solve

solveFluidMechanics     true;

solveEnergy             false;

solveNeutronics         false;

solveThermalMechanics   false;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Global simulation options

compr       false; // true for compressible simulation

liquidFuel  true;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Solution control

maxCo               1; // should be below 1 for CFL condition (necessary to guarantee stability if solving NS)

maxPowerVariation   0.025; //max power variation in each time step

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

functions 
{ 
    #includeFunc fluidRegionResiduals
    #includeFunc fluidRegionError
    #includeFunc fluidRegionMinMaxMagnitude
    #includeFunc fluidRegionSingleGraph

    #includeFunc neutroRegionError
}


// ************************************************************************* //
